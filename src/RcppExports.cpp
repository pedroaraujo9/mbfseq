// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// dmvnrm_arma_fast
arma::vec dmvnrm_arma_fast(arma::mat const& x, arma::rowvec const& mean, arma::mat const& sigma, bool const logd);
RcppExport SEXP _mbfseq_dmvnrm_arma_fast(SEXP xSEXP, SEXP meanSEXP, SEXP sigmaSEXP, SEXP logdSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat const& >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::rowvec const& >::type mean(meanSEXP);
    Rcpp::traits::input_parameter< arma::mat const& >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< bool const >::type logd(logdSEXP);
    rcpp_result_gen = Rcpp::wrap(dmvnrm_arma_fast(x, mean, sigma, logd));
    return rcpp_result_gen;
END_RCPP
}
// cpp_eval_ldnorm
arma::vec cpp_eval_ldnorm(arma::mat x, arma::mat mu, arma::cube sigma, arma::uvec z);
RcppExport SEXP _mbfseq_cpp_eval_ldnorm(SEXP xSEXP, SEXP muSEXP, SEXP sigmaSEXP, SEXP zSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mu(muSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type z(zSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_eval_ldnorm(x, mu, sigma, z));
    return rcpp_result_gen;
END_RCPP
}
// mvrnormArma
arma::mat mvrnormArma(int n, arma::vec mu, arma::mat sigma);
RcppExport SEXP _mbfseq_mvrnormArma(SEXP nSEXP, SEXP muSEXP, SEXP sigmaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type mu(muSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type sigma(sigmaSEXP);
    rcpp_result_gen = Rcpp::wrap(mvrnormArma(n, mu, sigma));
    return rcpp_result_gen;
END_RCPP
}
// cpp_compute_V
arma::mat cpp_compute_V(arma::mat X, arma::vec omega, arma::mat inv_cov);
RcppExport SEXP _mbfseq_cpp_compute_V(SEXP XSEXP, SEXP omegaSEXP, SEXP inv_covSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type omega(omegaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type inv_cov(inv_covSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_compute_V(X, omega, inv_cov));
    return rcpp_result_gen;
END_RCPP
}
// cpp_compute_m
arma::mat cpp_compute_m(arma::mat V, arma::mat X, arma::vec z, arma::vec omega, arma::vec C, arma::vec center, arma::mat inv_cov);
RcppExport SEXP _mbfseq_cpp_compute_m(SEXP VSEXP, SEXP XSEXP, SEXP zSEXP, SEXP omegaSEXP, SEXP CSEXP, SEXP centerSEXP, SEXP inv_covSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type V(VSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type z(zSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type omega(omegaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type C(CSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type center(centerSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type inv_cov(inv_covSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_compute_m(V, X, z, omega, C, center, inv_cov));
    return rcpp_result_gen;
END_RCPP
}
// sample_alpha
arma::mat sample_alpha(arma::mat X, arma::vec omega, arma::mat inv_cov, arma::vec z, arma::vec C, arma::vec center);
RcppExport SEXP _mbfseq_sample_alpha(SEXP XSEXP, SEXP omegaSEXP, SEXP inv_covSEXP, SEXP zSEXP, SEXP CSEXP, SEXP centerSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type omega(omegaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type inv_cov(inv_covSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type z(zSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type C(CSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type center(centerSEXP);
    rcpp_result_gen = Rcpp::wrap(sample_alpha(X, omega, inv_cov, z, C, center));
    return rcpp_result_gen;
END_RCPP
}
// logsumexp_cpp
double logsumexp_cpp(const arma::vec& x);
RcppExport SEXP _mbfseq_logsumexp_cpp(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(logsumexp_cpp(x));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_mbfseq_dmvnrm_arma_fast", (DL_FUNC) &_mbfseq_dmvnrm_arma_fast, 4},
    {"_mbfseq_cpp_eval_ldnorm", (DL_FUNC) &_mbfseq_cpp_eval_ldnorm, 4},
    {"_mbfseq_mvrnormArma", (DL_FUNC) &_mbfseq_mvrnormArma, 3},
    {"_mbfseq_cpp_compute_V", (DL_FUNC) &_mbfseq_cpp_compute_V, 3},
    {"_mbfseq_cpp_compute_m", (DL_FUNC) &_mbfseq_cpp_compute_m, 7},
    {"_mbfseq_sample_alpha", (DL_FUNC) &_mbfseq_sample_alpha, 6},
    {"_mbfseq_logsumexp_cpp", (DL_FUNC) &_mbfseq_logsumexp_cpp, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_mbfseq(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
