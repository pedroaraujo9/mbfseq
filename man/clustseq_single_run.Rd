% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/clustseq_single_run.R
\name{clustseq_single_run}
\alias{clustseq_single_run}
\title{Single Run of Cluster Sequence Model}
\usage{
clustseq_single_run(
  model_data,
  w = NULL,
  iters = 1000,
  thin = 1,
  burn_in = iters/2,
  lambda = NULL,
  n_basis = 10,
  fixed_sd = 10,
  epsilon = 1,
  intercept = FALSE,
  init_list = NULL,
  verbose = FALSE,
  seed = NULL
)
}
\arguments{
\item{model_data}{A model_data object generated by create_model_data, containing all required clustering, sequence, and basis information.}

\item{w}{(Optional) Initial cluster assignment vector for the secondary clustering. If NULL, will be sampled.}

\item{iters}{Integer. Number of iterations for the sampler (default: 1000).}

\item{thin}{Integer. Thinning parameter for the Markov chain (default: 1, keep all samples).}

\item{burn_in}{Integer. Number of iterations to discard as burn-in (default: iters/2).}

\item{lambda}{(Optional) Regularization or penalty hyperparameter(s).}

\item{n_basis}{Integer. Number of basis functions (default: 10).}

\item{fixed_sd}{Numeric. Fixed standard deviation for proposal or prior (default: 10).}

\item{epsilon}{Numeric. Small value used as a prior or jitter (default: 1).}

\item{intercept}{Logical. Whether to fit an intercept in the model (default: FALSE).}

\item{init_list}{(Optional) List of initial values for parameters.}

\item{verbose}{Logical. Whether to print progress to the console (default: FALSE).}

\item{seed}{(Optional) Random seed for reproducibility.}
}
\value{
An object of class "seqclust" containing:
\describe{
\item{w_class}{Most probable cluster allocations for each subject/observation (as inferred by comp_class).}
\item{sample_list}{All sampled/estimated parameters, clusterings, and diagnostics.}
\item{model_data}{The original model_data input.}
\item{fixed_sd, lambda, args}{Model run settings and parameters.}
}
}
\description{
Perform a single MCMC run of the cluster sequence model given input model data and (optionally) an initial clustering assignment (w). Iteratively samples or estimates model parameters and clusterings according to posterior (or other) distributions.
}
\details{
At each iteration, model parameters (e.g. alpha) and cluster assignments (w) are updated according to the model logic. Interactions with external clustering vectors, proposal updates, and cluster probability computations are managed internally. The progress bar prints every 10\% of iterations if verbose=TRUE. This function is intended for internal or parallel use and is not exported to end users.
}
\examples{
\dontrun{
  # Setup model data using two cluster assignments
  time <- rep(1:3, 10)
  id <- rep(1:10, each = 3)
  z <- rep(1:2, each = 15)
  w <- rep(1:2, length.out=30)
  x <- matrix(rnorm(30), ncol = 1)
  model_data <- create_model_data(time = time, id = id, x = x, z = z, w = w)
  # Run the clustering sequence model
  fit <- clustseq_single_run(model_data, iters = 200, verbose = TRUE)
  str(fit)
}
}
