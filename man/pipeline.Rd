% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pipeline.R
\name{pipeline}
\alias{pipeline}
\title{Model Fitting Pipeline for a Single G and M Combination}
\usage{
pipeline(
  cluster_dim,
  z,
  w,
  x,
  id,
  time,
  iters,
  burn_in,
  thin,
  lambda,
  n_basis,
  init_list,
  config = list(bounds = c(0.01, 10), lambda_start = 1, n_points = 20, n_start = 30,
    n_start_iters = 20, n_start_cores = 1, epsilon_w = 1, beta_sd = sqrt(10), mu_sd =
    sqrt(10), sigma_a = 1, sigma_b = 1),
  verbose = TRUE,
  seed = NULL
)
}
\arguments{
\item{cluster_dim}{Numeric vector of length 2, named "G" and "M", specifying
the number of primary and secondary clusters for this run.}

\item{z}{Optional integer vector. Primary cluster assignments for each subject or observation.}

\item{w}{Optional integer vector. Secondary cluster assignments for each subject or observation.}

\item{x}{Optional matrix or data.frame of covariates (columns = covariates, rows = observations).}

\item{id}{Vector of subject or group identifiers.}

\item{time}{Numeric vector indicating the time for each observation.}

\item{iters}{Integer. Total number of MCMC iterations for the final run.}

\item{burn_in}{Integer. Number of burn-in iterations for the final run.}

\item{thin}{Integer. Thinning interval for MCMC sampling in the final run.}

\item{lambda}{Optional numeric value for the regularization parameter. If \code{NULL},
the optimal lambda is estimated via \code{calibrate_lambda}.}

\item{n_basis}{Integer. Number of spline basis functions (includes intercept).}

\item{init_list}{Optional list of initial values for model parameters. If \code{NULL},
initial values are found using \code{find_init}.}

\item{config}{List of additional configuration parameters, including options
for lambda calibration and initialization search (see \code{calibrate_lambda} and \code{find_init}).}

\item{verbose}{Logical. If \code{TRUE}, prints progress messages.}

\item{seed}{Optional integer seed for reproducibility. If \code{NULL}, a random seed is generated.}
}
\value{
A list containing:
\describe{
\item{opt_lambda}{Result from lambda calibration (see \code{calibrate_lambda}), or a list
with the provided lambda.}
\item{opt_init}{Result from the initialization search (see \code{find_init}).}
\item{fit}{Result from the final model run (see \code{single_run}).}
\item{seed}{The random seed used for this pipeline run.}
}
}
\description{
Internal: Orchestrates the complete model fitting process for a single combination
of G (primary clusters) and M (secondary clusters). This includes creating
model data, calibrating lambda (if needed), finding good initial values, and
running the main MCMC chain.
}
\details{
This function serves as an internal helper for \code{fit_mbfseq}, handling the sequential
steps for a single (G, M) model configuration. It first calls \code{create_model_data}
to prepare the data structures. If \code{lambda} is not provided, it performs lambda
tuning using \code{calibrate_lambda}. Then, it finds robust initial values using
\code{find_init}. Finally, it executes the main MCMC chain with \code{single_run} using
the found or provided initial values and lambda. Progress messages are printed
if \code{verbose} is \code{TRUE}.
}
\seealso{
\code{\link{fit_mbfseq}}, \code{\link{create_model_data}}, \code{\link{calibrate_lambda}}, \code{\link{find_init}}, \code{\link{single_run}}
}
\keyword{internal}
