% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/single_run.R
\name{single_run}
\alias{single_run}
\title{Run a Single MCMC Sampling Chain for the Model}
\usage{
single_run(
  model_data,
  lambda = 1,
  iters = 1000,
  burn_in = iters/2,
  thin = 10,
  init_list = NULL,
  priors = list(epsilon_w = 1, beta_sd = sqrt(10), mu_sd = sqrt(10), sigma_a = 1, sigma_b
    = 1),
  verbose = FALSE,
  seed = NULL
)
}
\arguments{
\item{model_data}{A list containing the model data and settings required for sampling.}

\item{lambda}{Numeric scalar controlling regularization strength (default 1).}

\item{iters}{Integer number of MCMC iterations (default 1000).}

\item{burn_in}{Number of iterations to discard as burn-in (default half of \code{iters}).}

\item{thin}{Integer thinning interval for stored samples (default 10).}

\item{init_list}{Optional list of initial parameter values (default \code{NULL}).}

\item{priors}{A list of prior hyperparameters:
\describe{
\item{epsilon_w}{Prior parameter for updating \code{w} (default 1).}
\item{beta_sd}{Prior standard deviation for \code{alpha} coefficients (default \code{sqrt(10)}).}
\item{mu_sd}{Prior standard deviation for \code{mu} parameters (default \code{sqrt(10)}).}
\item{sigma_a}{Shape parameter for \code{sigma} prior (default 1).}
\item{sigma_b}{Rate parameter for \code{sigma} prior (default 1).}
}}

\item{verbose}{Logical indicating whether to print progress updates (default \code{FALSE}).}

\item{seed}{Optional integer seed for reproducibility (default \code{NULL}).}
}
\value{
A list of class \code{"mbfseq"} containing:
\itemize{
\item \code{z_class}: Estimated latent class assignments for \code{z}.
\item \code{w_class}: Estimated latent class assignments for \code{w}.
\item \code{sample_list}: A list of sampled parameter arrays.
\item \code{seed}: The seed used when fitting the model.
}
}
\description{
This function runs a single Markov Chain Monte Carlo (MCMC) sampling chain
for the specified model using Gibbs updates for latent variables and parameters.
It supports optional verbose output and configurable priors, iterations, burn-in, and thinning.
}
\details{
The function performs Gibbs updates for latent parameters \code{alpha}, \code{w}, \code{pw}, \code{z}, \code{mu}, and \code{sigma}
iteratively over \code{iters} MCMC steps. It supports burn-in and thinning to reduce autocorrelation in stored samples.
The updates depend on the provided priors and initial values.
Progress updates are printed every 10\% of iterations if \code{verbose = TRUE}.
}
\examples{
\dontrun{
# Assuming 'model_data' is prepared and required dependencies are loaded
fit <- single_run(model_data, iters = 2000, verbose = TRUE, seed = 123)
summary(fit$z_class)
}
}
