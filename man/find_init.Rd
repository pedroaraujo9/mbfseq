% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/find_init.R
\name{find_init}
\alias{find_init}
\title{Find Initial Values via Multiple Restarts}
\usage{
find_init(
  n_start = 30,
  iters = 30,
  n_cores = 1,
  model_data,
  lambda = 1,
  init_list = NULL,
  priors = list(epsilon_w = 1, beta_sd = sqrt(10), mu_sd = sqrt(10), sigma_a = 1, sigma_b
    = 1),
  seed = NULL
)
}
\arguments{
\item{n_start}{Integer specifying number of initialization runs (default: 30)}

\item{iters}{Integer specifying number of iterations per run (default: 50)}

\item{n_cores}{Integer specifying number of cores for parallel execution (default: 1)}

\item{model_data}{List containing all required model data components}

\item{lambda}{Numeric penalty parameter for regularization (default: 1)}

\item{init_list}{Optional list of initial values for parameters. If NULL,
random initialization is used (default: NULL)}

\item{priors}{List containing prior parameters:
\describe{
\item{epsilon_w}{Precision for w prior (default: 1)}
\item{beta_sd}{SD for non-penalized coefficients (default: sqrt(10))}
\item{mu_sd}{SD for cluster means prior (default: sqrt(10))}
\item{sigma_a}{Shape parameter for sigma prior (default: 1)}
\item{sigma_b}{Rate parameter for sigma prior (default: 1)}
}}

\item{seed}{Optional random seed for reproducibility (default: NULL)}
}
\value{
A list containing:
\describe{
\item{logpost}{Vector of mean log-posterior values for each run}
\item{init_list}{List of parameter values from the best run}
\item{run_time}{Total execution time for all runs}
}
}
\description{
Performs multiple runs of the model with different initializations to find
good starting values for the main MCMC chain. Runs are executed in parallel
when possible.
}
\details{
The function:
\enumerate{
\item Runs \code{n_start} independent chains in parallel (if \code{n_cores > 1})
\item For each chain:
\itemize{
\item Runs for \code{iters} iterations with burn-in of \code{iters/2}
\item Thins samples by factor of 2
}
\item Selects the chain with highest mean log-posterior value
\item Returns the final parameter values from the best chain as initial values
}

Parallel execution uses \code{future} and \code{future.apply} packages.
}
\examples{
\dontrun{
# Example usage (not run)
# Find initial values with 10 restarts using 2 cores
init_results <- find_init(
  n_start = 10,
  iters = 100,
  n_cores = 2,
  model_data = data,
  lambda = 1.5,
  priors = priors,
  seed = 42
)
}

}
\seealso{
\code{\link{single_run}} for the main MCMC function that uses these initial values
}
